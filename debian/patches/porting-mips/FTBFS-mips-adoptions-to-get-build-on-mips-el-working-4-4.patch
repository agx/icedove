From: Heiher <r@hev.cc>
Date: Sun, 1 Nov 2015 07:36:57 +0800
Subject: FTBFS mips: adoptions to get build on mips(el) working 4/4

Bug 1213146 - IonMonkey: MIPS: Modify the last two args of Assembler::bind to generic type. r=arai

Original patch is taken from Iceweasel.
---
 mozilla/js/src/jit/mips-shared/Assembler-mips-shared.h | 2 +-
 mozilla/js/src/jit/mips32/Assembler-mips32.cpp         | 2 +-
 mozilla/js/src/jit/mips32/Assembler-mips32.h           | 2 +-
 mozilla/js/src/jit/mips64/Assembler-mips64.cpp         | 2 +-
 mozilla/js/src/jit/mips64/Assembler-mips64.h           | 2 +-
 5 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/mozilla/js/src/jit/mips-shared/Assembler-mips-shared.h b/mozilla/js/src/jit/mips-shared/Assembler-mips-shared.h
index a42a976..137f7af 100644
--- a/mozilla/js/src/jit/mips-shared/Assembler-mips-shared.h
+++ b/mozilla/js/src/jit/mips-shared/Assembler-mips-shared.h
@@ -1030,7 +1030,7 @@ class AssemblerMIPSShared : public AssemblerShared
 
     // label operations
     void bind(Label* label, BufferOffset boff = BufferOffset());
-    virtual void bind(InstImm* inst, uint32_t branch, uint32_t target) = 0;
+    virtual void bind(InstImm* inst, uintptr_t branch, uintptr_t target) = 0;
     virtual void Bind(uint8_t* rawCode, AbsoluteLabel* label, const void* address) = 0;
     uint32_t currentOffset() {
         return nextOffset().getOffset();
diff --git a/mozilla/js/src/jit/mips32/Assembler-mips32.cpp b/mozilla/js/src/jit/mips32/Assembler-mips32.cpp
index 87a963e..a53d679 100644
--- a/mozilla/js/src/jit/mips32/Assembler-mips32.cpp
+++ b/mozilla/js/src/jit/mips32/Assembler-mips32.cpp
@@ -261,7 +261,7 @@ Assembler::Bind(uint8_t* rawCode, AbsoluteLabel* label, const void* address)
 }
 
 void
-Assembler::bind(InstImm* inst, uint32_t branch, uint32_t target)
+Assembler::bind(InstImm* inst, uintptr_t branch, uintptr_t target)
 {
     int32_t offset = target - branch;
     InstImm inst_bgezal = InstImm(op_regimm, zero, rt_bgezal, BOffImm16(0));
diff --git a/mozilla/js/src/jit/mips32/Assembler-mips32.h b/mozilla/js/src/jit/mips32/Assembler-mips32.h
index 25877b1..4c06757 100644
--- a/mozilla/js/src/jit/mips32/Assembler-mips32.h
+++ b/mozilla/js/src/jit/mips32/Assembler-mips32.h
@@ -129,7 +129,7 @@ class Assembler : public AssemblerMIPSShared
     static void TraceJumpRelocations(JSTracer* trc, JitCode* code, CompactBufferReader& reader);
     static void TraceDataRelocations(JSTracer* trc, JitCode* code, CompactBufferReader& reader);
 
-    void bind(InstImm* inst, uint32_t branch, uint32_t target);
+    void bind(InstImm* inst, uintptr_t branch, uintptr_t target);
 
     // Copy the assembly code to the given buffer, and perform any pending
     // relocations relying on the target address.
diff --git a/mozilla/js/src/jit/mips64/Assembler-mips64.cpp b/mozilla/js/src/jit/mips64/Assembler-mips64.cpp
index 5a199ad..a358402 100644
--- a/mozilla/js/src/jit/mips64/Assembler-mips64.cpp
+++ b/mozilla/js/src/jit/mips64/Assembler-mips64.cpp
@@ -256,7 +256,7 @@ Assembler::Bind(uint8_t* rawCode, AbsoluteLabel* label, const void* address)
 }
 
 void
-Assembler::bind(InstImm* inst, uint64_t branch, uint64_t target)
+Assembler::bind(InstImm* inst, uintptr_t branch, uintptr_t target)
 {
     int64_t offset = target - branch;
     InstImm inst_bgezal = InstImm(op_regimm, zero, rt_bgezal, BOffImm16(0));
diff --git a/mozilla/js/src/jit/mips64/Assembler-mips64.h b/mozilla/js/src/jit/mips64/Assembler-mips64.h
index 85ca1c1..6dd8e52 100644
--- a/mozilla/js/src/jit/mips64/Assembler-mips64.h
+++ b/mozilla/js/src/jit/mips64/Assembler-mips64.h
@@ -131,7 +131,7 @@ class Assembler : public AssemblerMIPSShared
     static void TraceJumpRelocations(JSTracer* trc, JitCode* code, CompactBufferReader& reader);
     static void TraceDataRelocations(JSTracer* trc, JitCode* code, CompactBufferReader& reader);
 
-    void bind(InstImm* inst, uint64_t branch, uint64_t target);
+    void bind(InstImm* inst, uintptr_t branch, uintptr_t target);
 
     // Copy the assembly code to the given buffer, and perform any pending
     // relocations relying on the target address.
