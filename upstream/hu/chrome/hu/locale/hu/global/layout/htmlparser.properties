# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
#
# The contents of this file are subject to the Mozilla Public License Version
# 1.1 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
# The Original Code is HTML parser error reporting code.
#
# The Initial Developer of the Original Code is
# Mozilla Foundation.
# Portions created by the Initial Developer are Copyright (C) 2011
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#   Henri Sivonen <hsivonen@iki.fi>
#
# Alternatively, the contents of this file may be used under the terms of
# either the GNU General Public License Version 2 or later (the "GPL"), or
# the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
#
# ***** END LICENSE BLOCK *****

# Encoding warnings and errors
EncNoDeclarationFrame=The character encoding of a framed document was not declared. The document may appear different if viewed without the document framing it.
EncNoDeclarationPlain=The character encoding of the plain text document was not declared. The document will render with garbled text in some browser configurations if the document contains characters from outside the US-ASCII range. The character encoding of the file needs to be declared in the transfer protocol or file needs to use a byte order mark as an encoding signature.
EncNoDeclaration=The character encoding of the HTML document was not declared. The document will render with garbled text in some browser configurations if the document contains characters from outside the US-ASCII range. The character encoding of the page must to be declared in the document or in the transfer protocol.
EncLateMetaFrame=The character encoding declaration of the framed HTML document was not found when prescanning the first 1024 bytes of the file. When viewed without the document framing it, the page will reload automatically. The encoding declaration needs to be moved to be within the first 1024 bytes of the file.
EncLateMeta=The character encoding declaration of the HTML document was not found when prescanning the first 1024 bytes of the file. When viewed in a differently-configured browser, this page will reload automatically. The encoding declaration needs to be moved to be within the first 1024 bytes of the file.
EncLateMetaReload=The page was reloaded, because the character encoding declaration of the HTML document was not found when prescanning the first 1024 bytes of the file. The encoding declaration needs to be moved to be within the first 1024 bytes of the file.
EncLateMetaTooLate=The character encoding declaration of document was found too late for it to take effect. The encoding declaration needs to be moved to be within the first 1024 bytes of the file.
EncMetaUnsupported=An unsupported character encoding was declared for the HTML document using a meta tag. The declaration was ignored.
EncProtocolUnsupported=An unsupported character encoding was declared on the transfer protocol level. The declaration was ignored.
EncBomlessUtf16=Detected UTF-16-encoded Basic Latin-only text without a byte order mark and without a transfer protocol-level declaration. Encoding this content in UTF-16 is inefficient and the character encoding should have been declared in any case.
EncMetaUtf16=A meta tag was used to declare the character encoding as UTF-16. This was interpreted as an UTF-8 declaration instead.
EncMetaNonRoughSuperset=A meta tag was used to declare a character encoding the does not encode the Basic Latin range roughly like US-ASCII. The declaration was ignored.

# The bulk of the messages below are derived from 
# http://hg.mozilla.org/projects/htmlparser/file/1f633cef7de7/src/nu/validator/htmlparser/impl/ErrorReportingTokenizer.java
# which is available under the MIT license.

# Tokenizer errors
errGarbageAfterLtSlash=Garbage after \u201c</\u201d.
errLtSlashGt=Saw \u201c</>\u201d. Probable causes: Unescaped \u201c<\u201d (escape as \u201c&lt;\u201d) or mistyped end tag.
errCharRefLacksSemicolon=A karakterreferencia nem volt pontosvesszővel lezárva.
errNoDigitsInNCR=Nincsenek számok a számmal megadott karakterreferenciában.
errGtInSystemId=\u201c>\u201d in system identifier.
errGtInPublicId=\u201c>\u201d in public identifier.
errNamelessDoctype=Nameless doctype.
errConsecutiveHyphens=Consecutive hyphens did not terminate a comment. \u201c--\u201d is not permitted inside a comment, but e.g. \u201c- -\u201d is.
errPrematureEndOfComment=Premature end of comment. Use \u201c-->\u201d to end a comment properly.
errBogusComment=Bogus comment.
errUnquotedAttributeLt=\u201c<\u201d in an unquoted attribute value. Probable cause: Missing \u201c>\u201d immediately before.
errUnquotedAttributeGrave=\u201c`\u201d in an unquoted attribute value. Probable cause: Using the wrong character as a quote.
errUnquotedAttributeQuote=Quote in an unquoted attribute value. Probable causes: Attributes running together or a URL query string in an unquoted attribute value.
errUnquotedAttributeEquals=\u201c=\u201d in an unquoted attribute value. Probable causes: Attributes running together or a URL query string in an unquoted attribute value.
errSlashNotFollowedByGt=A slash was not immediately followed by \u201c>\u201d.
errNoSpaceBetweenAttributes=No space between attributes.
errUnquotedAttributeStartLt=\u201c<\u201d at the start of an unquoted attribute value. Probable cause: Missing \u201c>\u201d immediately before.
errUnquotedAttributeStartGrave=\u201c`\u201d at the start of an unquoted attribute value. Probable cause: Using the wrong character as a quote.
errUnquotedAttributeStartEquals=\u201c=\u201d at the start of an unquoted attribute value. Probable cause: Stray duplicate equals sign.
errAttributeValueMissing=Attribute value missing.
errBadCharBeforeAttributeNameLt=Saw \u201c<\u201d when expecting an attribute name. Probable cause: Missing \u201c>\u201d immediately before.
errEqualsSignBeforeAttributeName=Saw \u201c=\u201d when expecting an attribute name. Probable cause: Attribute name missing.
errBadCharAfterLt=Bad character after \u201c<\u201d. Probable cause: Unescaped \u201c<\u201d. Try escaping it as \u201c&lt;\u201d.
errLtGt=Saw \u201c<>\u201d. Probable causes: Unescaped \u201c<\u201d (escape as \u201c&lt;\u201d) or mistyped start tag.
errProcessingInstruction=Saw \u201c<?\u201d. Probable cause: Attempt to use an XML processing instruction in HTML. (XML processing instructions are not supported in HTML.)
errUnescapedAmpersandInterpretedAsCharacterReference=The string following \u201c&\u201d was interpreted as a character reference. (\u201c&\u201d probably should have been escaped as \u201c&amp;\u201d.)
errNotSemicolonTerminated=Named character reference was not terminated by a semicolon. (Or \u201c&\u201d should have been escaped as \u201c&amp;\u201d.)
errNoNamedCharacterMatch=\u201c&\u201d did not start a character reference. (\u201c&\u201d probably should have been escaped as \u201c&amp;\u201d.)
errQuoteBeforeAttributeName=Saw a quote when expecting an attribute name. Probable cause: \u201c=\u201d missing immediately before.
errLtInAttributeName=\u201c<\u201d in attribute name. Probable cause: \u201c>\u201d missing immediately before.
errQuoteInAttributeName=Quote in attribute name. Probable cause: Matching quote missing somewhere earlier.
errExpectedPublicId=Expected a public identifier but the doctype ended.
errBogusDoctype=Bogus doctype.
maybeErrAttributesOnEndTag=End tag had attributes.
maybeErrSlashInEndTag=Stray \u201c/\u201d at the end of an end tag.
errNcrNonCharacter=Character reference expands to a non-character.
errNcrSurrogate=Character reference expands to a surrogate.
errNcrControlChar=Character reference expands to a control character.
errNcrCr=A numeric character reference expanded to carriage return.
errNcrInC1Range=A numeric character reference expanded to the C1 controls range.
errEofInPublicId=End of file inside public identifier.
errEofInComment=End of file inside comment.
errEofInDoctype=End of file inside doctype.
errEofInAttributeValue=End of file reached when inside an attribute value. Ignoring tag.
errEofInAttributeName=End of file occurred in an attribute name. Ignoring tag.
errEofWithoutGt=Saw end of file without the previous tag ending with \u201c>\u201d. Ignoring tag.
errEofInTagName=End of file seen when looking for tag name. Ignoring tag.
errEofInEndTag=End of file inside end tag. Ignoring tag.
errEofAfterLt=End of file after \u201c<\u201d.
errNcrOutOfRange=Character reference outside the permissible Unicode range.
errNcrUnassigned=Character reference expands to a permanently unassigned code point.
errDuplicateAttribute=Duplicate attribute.
errEofInSystemId=End of file inside system identifier.
errExpectedSystemId=Expected a system identifier but the doctype ended.
errMissingSpaceBeforeDoctypeName=Missing space before doctype name.
errHyphenHyphenBang=\u201c--!\u201d found in comment.
errNcrZero=Character reference expands to zero.
errNoSpaceBetweenDoctypeSystemKeywordAndQuote=No space between the doctype \u201cSYSTEM\u201d keyword and the quote.
errNoSpaceBetweenPublicAndSystemIds=No space between the doctype public and system identifiers.
errNoSpaceBetweenDoctypePublicKeywordAndQuote=No space between the doctype \u201cPUBLIC\u201d keyword and the quote.

# Tree builder errors
errStrayStartTag2=Stray start tag \u201c%1$S\u201d.
errStrayEndTag=Stray end tag \u201c%1$S\u201d.
errUnclosedElements=End tag \u201c%1$S\u201d seen, but there were open elements.
errUnclosedElementsImplied=End tag \u201c%1$S\u201d implied, but there were open elements.
errUnclosedElementsCell=A table cell was implicitly closed, but there were open elements.
errStrayDoctype=Stray doctype.
errAlmostStandardsDoctype=Almost standards mode doctype. Expected \u201c<!DOCTYPE html>\u201d.
errQuirkyDoctype=Quirky doctype. Expected \u201c<!DOCTYPE html>\u201d.
errNonSpaceInTrailer=Non-space character in page trailer.
errNonSpaceAfterFrameset=Non-space after \u201cframeset\u201d.
errNonSpaceInFrameset=Non-space in \u201cframeset\u201d.
errNonSpaceAfterBody=Non-space character after body.
errNonSpaceInColgroupInFragment=Non-space in \u201ccolgroup\u201d when parsing fragment.
errNonSpaceInNoscriptInHead=Non-space character inside \u201cnoscript\u201d inside \u201chead\u201d.
errFooBetweenHeadAndBody=\u201c%1$S\u201d element between \u201chead\u201d and \u201cbody\u201d.
errStartTagWithoutDoctype=Start tag seen without seeing a doctype first. Expected \u201c<!DOCTYPE html>\u201d.
errNoSelectInTableScope=No \u201cselect\u201d in table scope.
errStartSelectWhereEndSelectExpected=\u201cselect\u201d start tag where end tag expected.
errStartTagWithSelectOpen=\u201c%1$S\u201d start tag with \u201cselect\u201d open.
errBadStartTagInHead2=Bad start tag \u201c%1$S\u201d in \u201chead\u201d.
errImage=Saw a start tag \u201cimage\u201d.
errIsindex=\u201cisindex\u201d seen.
errFooSeenWhenFooOpen=An \u201c%1$S\u201d start tag seen but an element of the same type was already open.
errHeadingWhenHeadingOpen=Heading cannot be a child of another heading.
errFramesetStart=\u201cframeset\u201d start tag seen.
errNoCellToClose=No cell to close.
errStartTagInTable=Start tag \u201c%1$S\u201d seen in \u201ctable\u201d.
errFormWhenFormOpen=Saw a \u201cform\u201d start tag, but there was already an active \u201cform\u201d element. Nested forms are not allowed. Ignoring the tag.
errTableSeenWhileTableOpen=Start tag for \u201ctable\u201d seen but the previous \u201ctable\u201d is still open.
errStartTagInTableBody=\u201c%1$S\u201d start tag in table body.
errEndTagSeenWithoutDoctype=End tag seen without seeing a doctype first. Expected \u201c<!DOCTYPE html>\u201d.
errEndTagAfterBody=Saw an end tag after \u201cbody\u201d had been closed.
errEndTagSeenWithSelectOpen=\u201c%1$S\u201d end tag with \u201cselect\u201d open.
errGarbageInColgroup=Garbage in \u201ccolgroup\u201d fragment.
errEndTagBr=End tag \u201cbr\u201d.
errNoElementToCloseButEndTagSeen=No \u201c%1$S\u201d element in scope but a \u201c%1$S\u201d end tag seen.
errHtmlStartTagInForeignContext=HTML start tag \u201c%1$S\u201d in a foreign namespace context.
errTableClosedWhileCaptionOpen=\u201ctable\u201d closed but \u201ccaption\u201d was still open.
errNoTableRowToClose=No table row to close.
errNonSpaceInTable=Misplaced non-space characters inside a table.
errUnclosedChildrenInRuby=Unclosed children in \u201cruby\u201d.
errStartTagSeenWithoutRuby=Start tag \u201c%1$S\u201d seen without a \u201cruby\u201d element being open.
errSelfClosing=Self-closing syntax (\u201c/>\u201d) used on a non-void HTML element. Ignoring the slash and treating as a start tag.
errNoCheckUnclosedElementsOnStack=Unclosed elements on stack.
errEndTagDidNotMatchCurrentOpenElement=End tag \u201c%1$S\u201d did not match the name of the current open element (\u201c%2$S\u201d).
errEndTagViolatesNestingRules=End tag \u201c%1$S\u201d violates nesting rules.
